/*
 * This file is generated by jOOQ.
 */
package com.alessiodp.oreannouncer.common.jpa.tables.records;


import com.alessiodp.oreannouncer.common.jpa.tables.BlocksFound;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlocksFoundRecord extends UpdatableRecordImpl<BlocksFoundRecord> implements Record5<Integer, Integer, String, String, BigDecimal> {

    private static final long serialVersionUID = 819514164;

    /**
     * Setter for <code>BLOCKS_FOUND.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>BLOCKS_FOUND.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>BLOCKS_FOUND.FOUND</code>.
     */
    public void setFound(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>BLOCKS_FOUND.FOUND</code>.
     */
    public Integer getFound() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>BLOCKS_FOUND.MATERIAL_NAME</code>.
     */
    public void setMaterialName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>BLOCKS_FOUND.MATERIAL_NAME</code>.
     */
    public String getMaterialName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>BLOCKS_FOUND.PLAYER</code>.
     */
    public void setPlayer(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>BLOCKS_FOUND.PLAYER</code>.
     */
    public String getPlayer() {
        return (String) get(3);
    }

    /**
     * Setter for <code>BLOCKS_FOUND.TIMESTAMP</code>.
     */
    public void setTimestamp(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>BLOCKS_FOUND.TIMESTAMP</code>.
     */
    public BigDecimal getTimestamp() {
        return (BigDecimal) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, String, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, String, String, BigDecimal> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return BlocksFound.BLOCKS_FOUND.ID;
    }

    @Override
    public Field<Integer> field2() {
        return BlocksFound.BLOCKS_FOUND.FOUND;
    }

    @Override
    public Field<String> field3() {
        return BlocksFound.BLOCKS_FOUND.MATERIAL_NAME;
    }

    @Override
    public Field<String> field4() {
        return BlocksFound.BLOCKS_FOUND.PLAYER;
    }

    @Override
    public Field<BigDecimal> field5() {
        return BlocksFound.BLOCKS_FOUND.TIMESTAMP;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getFound();
    }

    @Override
    public String component3() {
        return getMaterialName();
    }

    @Override
    public String component4() {
        return getPlayer();
    }

    @Override
    public BigDecimal component5() {
        return getTimestamp();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getFound();
    }

    @Override
    public String value3() {
        return getMaterialName();
    }

    @Override
    public String value4() {
        return getPlayer();
    }

    @Override
    public BigDecimal value5() {
        return getTimestamp();
    }

    @Override
    public BlocksFoundRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BlocksFoundRecord value2(Integer value) {
        setFound(value);
        return this;
    }

    @Override
    public BlocksFoundRecord value3(String value) {
        setMaterialName(value);
        return this;
    }

    @Override
    public BlocksFoundRecord value4(String value) {
        setPlayer(value);
        return this;
    }

    @Override
    public BlocksFoundRecord value5(BigDecimal value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public BlocksFoundRecord values(Integer value1, Integer value2, String value3, String value4, BigDecimal value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BlocksFoundRecord
     */
    public BlocksFoundRecord() {
        super(BlocksFound.BLOCKS_FOUND);
    }

    /**
     * Create a detached, initialised BlocksFoundRecord
     */
    public BlocksFoundRecord(Integer id, Integer found, String materialName, String player, BigDecimal timestamp) {
        super(BlocksFound.BLOCKS_FOUND);

        set(0, id);
        set(1, found);
        set(2, materialName);
        set(3, player);
        set(4, timestamp);
    }
}
